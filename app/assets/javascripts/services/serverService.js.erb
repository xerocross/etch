(function(){
  var AUTH_TOKEN = $('meta[name=csrf-token]').attr('content');
  var server = function($http, statusPrinter, cardService) {
    "use strict";
    var getCardsDuePath = "<%=Rails.application.routes.url_helpers.get_cards_due_flashcards_path(:format=>:json) %>";
    var cardsStudyPath = "<%=Rails.application.routes.url_helpers.flashcards_path %>.json?study=study";
    
    var user_help_notifications = "<%=Rails.application.routes.url_helpers.user_help_notifications_path %>";
    
    
    var notifyOfFailure = function() {
      alert("We encountered an error while communicating with the server.");
    }
    
    
    this.postAlert = function(alertId) {

        var verb = 'POST';
        var data = {help_notification: {tip_id: alertId}};
        var path = user_help_notifications;
        var req = {
            method: verb,
            url : path,
            data : data,
            headers: {
               'X-CSRF-Token': AUTH_TOKEN
            },
        };
        $http(req);

    };
    
    var auth;

    this.getCards = function(path, query, container) {
      console.log("get cards");
      console.log(query);
      if (path.indexOf("?") > -1)
        var urlString = path + "&";
      else 
        var urlString = path + "?";

      var queryParameters = Object.getOwnPropertyNames(query);
      console.log(queryParameters);
      
      
      
      for (var i = 0; i < queryParameters.length; i++) {
        var param = queryParameters[i];
        console.log("param: " + param);
        if (typeof(param) === 'string' && param.length > 0 && param !== '0') {
          console.log("url:");
          urlString += param + "=" + query[param] + "&";
          console.log(urlString);
        }
      }
      return $http.get(urlString).then(function (obj) {
        var cards = obj.data;
        for (var i = 0; i < cards.length; i++) {
          var card = cards[i];
          card = cardService.parseCard(card);
          container.push(card);
        }
        return obj;
      });
    }
    
    
    
    this.deleteCard = function(cardId, callback) {
      var success = function(dataObj) {
        if (typeof(callback) === 'function' || typeof(callback) === 'object')
          callback();
      };
      
      var path = "/flashcards/" + cardId + ".json";
      var req = {
        method: 'DELETE',
        url : path,
        data : {
          '_method': 'DELETE' 
        },
        headers: {
           'X-CSRF-Token': AUTH_TOKEN
        },
      };
      $http(req).then(success, notifyOfFailure);
    };
    
    
    
    
  
    this.getCardsStillLearning = function(success){
        $http.get(cardsStudyPath)
            .then(success);
    };
    this.getCard = function(cardid, success) {
        var path = "<%=Rails.application.routes.url_helpers.flashcards_path %>/" + cardid + ".json";
        $http.get(path).then(function(response){
            auth = response.data.auth;
            return response;
        }).then(success);
    };

    this.process = function(cardId, methodName, callback) {
      var success =function(){
        if (typeof(callback) === 'function' || typeof(callback) === 'object')
          callback();
      };
      var pathBase = "<%=Rails.application.routes.url_helpers.flashcards_path %>/";
      var cardPath = pathBase + cardId + ".json";
      var methodPath = pathBase + cardId + "/" + methodName;
      $http.get(cardPath).then(function(returnObj){
          auth = returnObj.data.auth;
      }).then(function(){
          var req = {
              method: 'PATCH',
              url : methodPath,
              headers: {
                 'X-CSRF-Token': auth
              },
          };
          $http(req).then(success, notifyOfFailure);
      });
    }
    var that = this;
    this.gotIt = function(cardId, callback) {
      that.process(cardId, "got_it", callback);
    };
    
    this.memorizedIt = function(cardId, callback) {
      that.process(cardId, "got_it", callback);
    };
    
    
    this.setAuthenticityToken = function(token) {
        AUTH_TOKEN = token;
    }
    this.delete = function(cardId, callback){
        var pathBase = "<%=Rails.application.routes.url_helpers.flashcards_path %>";
        var deletePath = pathBase + "/" + cardId + ".json";
        var auth;
        $http.get(deletePath).then(function(returnObj){
            console.log(returnObj);
            auth = returnObj.data.auth;
        }).then(function(){
            
            var data = {
                authenticity_token: auth
            };
            var req = {
                method: 'DELETE',
                url : deletePath,
                data : data,
                headers: {
                   'X-CSRF-Token': auth
                },
            };
            $http(req).then(function(){
              statusPrinter.print("Card " + cardId + " was deleted.");
              callback();
            },function(){
              alert("error");
            });
        });
     
    };
  }

  app.service('server',['$http','statusPrinter','cardService', server]);
})();